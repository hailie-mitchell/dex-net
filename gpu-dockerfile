ARG cuda_version=9.0
ARG ubuntu_version=16.04
ARG nvidia_cudnn_version=7.1.3.16-1+cuda9.0

FROM nvidia/cudagl:${cuda_version}-devel-ubuntu${ubuntu_version}
MAINTAINER anna.konrad.2020@mumail.ie

ARG nvidia_cudnn_version
ENV NVIDIA_CUDNN_VERSION=${nvidia_cudnn_version}

#RUN apt-key del 7fa2af80 && \
#    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/3bf863cc.pub

RUN apt-get update && apt-get install -y --no-install-recommends \
    libcudnn7=${NVIDIA_CUDNN_VERSION} \
    libcudnn7-dev=${NVIDIA_CUDNN_VERSION} \
    && apt-mark hold libcudnn7 \
    && rm -rf /var/lib/apt/lists/*

ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},display
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    software-properties-common \
    python-sip \
    libhdf5-dev \
    sudo \
    x11-xserver-utils \
    x11vnc \
    xinit \
    xserver-xorg-video-dummy \
    xserver-xorg-input-void \
    dirmngr \
    gnupg2 \
    lsb-release \
    python-rtree \
    python-dev \
    python-pip \
    cmake \
    libvtk5-dev \
    vim \
    cmake \
    libvtk5-dev \
    python-qt4 \
    mesa-utils \
    build-essential \
    gcc \
    g++ \
    git \
    libgl1-mesa-glx \
    libgl1-mesa-dri \
    locales \
    locales-all \
    g++ \
    python-tk \
    libxmu-dev \
    libxi-dev \
    libboost-dev \
    libboost-all-dev \
    freeglut3-dev \
    libspatialindex-dev \
    cairo-dock  \
    libpoppler-glib-dev \
    libminizip-dev \
    qt4-dev-tools \
    libassimp-dev \
    libavcodec-dev \
    libavformat-dev \
    libboost-date-time-dev \
    libbullet-dev \
    libfaac-dev \
    libglew-dev \
    libgsm1-dev \
    liblapack-dev \
    liblog4cxx-dev \
    libmpfr-dev \
    libode-dev \
    libogg-dev \
    libpcrecpp0v5 \
    liburiparser-dev \
    libpcre3-dev \
    libqhull-dev \
    libqt4-dev \
    libsoqt-dev-common \
    libsoqt4-dev \
    libswscale-dev \
    libvorbis-dev \
    libx264-dev \
    libxml2-dev \
    libxvidcore-dev \
    libcairo2-dev \
    libjasper-dev \
    libpoppler-glib-dev \
    libsdl2-dev \
    libtiff5-dev \
    libxrandr-dev \
    libccd-dev \
    libgtk2.0 \
    libgtkglext1 && \
    add-apt-repository ppa:ubuntu-toolchain-r/test && \
    apt-get update && \
    apt-get install -y gcc-4.9 && \
    apt-get upgrade -y libstdc++6

RUN wget https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
    python get-pip.py

RUN python -m pip install setuptools && python -m pip install --upgrade pip && python -m pip install wheel==0.34.2 && \
    python -m pip install vtk==8.1.2 pycollada==0.7.1 open3d==0.9.0 pyopengl==3.1.0 sympy==0.7.1 numpy==1.16.6 scipy==1.2.2 scikit-learn==0.20.4 scikit-image==0.14.5 scikit-video==1.1.11 opencv-python==4.2.0.32 h5py==2.5.0 matplotlib==2.2.5 multiprocess==0.70.9 dill==0.3.1.1 cvxopt==1.2.4 ipython==5.10.0 pillow pyhull==2015.2.1 setproctitle==1.1.10 trimesh==3.6.10
RUN mkdir deps
WORKDIR /deps

RUN git clone https://github.com/rdiankov/collada-dom.git && \
    cd collada-dom && mkdir build && cd build && \
    cmake .. && \
    make -j"$(nproc)" && \
    make install && cd ../.. && \
    git clone --branch OpenSceneGraph-3.4 https://github.com/openscenegraph/OpenSceneGraph.git && \
    cd OpenSceneGraph && mkdir build && cd build && \
    cmake .. -DDESIRED_QT_VERSION=4 && \
    make -j"$(nproc)" && \
    make install && cd ../.. && \
    git clone https://github.com/flexible-collision-library/fcl.git && \
    cd fcl && git checkout 0.5.0 && \
    mkdir build && cd build && \
    cmake .. && \
    make -j"$(nproc)" && \
    make install && cd ../.. && \
    ln -sf /usr/include/eigen3/Eigen /usr/include/Eigen && \
    git clone https://github.com/jeffmahler/openrave.git && \
    cd openrave/ && \
    mkdir build && cd build && \
    cmake .. -DOSG_DIR=/usr/local/lib64/ && \
    make -j"$(nproc)" && \
    make install

RUN git clone https://github.com/jeffmahler/SDFGen.git && \
    cd SDFGen/ && \
    sh install.sh && \
    cd .. && \
    git clone https://github.com/jeffmahler/Boost.NumPy.git && \
    cd Boost.NumPy && \
    sh install.sh

ENV LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64

RUN pip install setuptools==44.0.0 wheel==0.34.2 imageio==2.5.0 joblib==0.14.1 colorlog==4.1.0 && \
    pip install freetype-py==2.1.0.post1 pyface==6.1.2 traitsui==6.1.3 && \
    pip install pyglet==1.4.10 && \
    pip install pyrender==0.1.36 && \
    pip install dask==1.0.0 chardet==3.0.2 && \
    apt-get install -y libosmesa6-dev

RUN rm -rf /usr/local/lib/python2.7/dist-packages/dask* && \
    rm -rf /usr/local/lib/python2.7/dist-packages/toolz* && \
    pip install ruamel.yaml==0.16.12 scikit-image==0.14.2 scikit-learn==0.20.4 scikit-video==1.1.11 scipy==1.2.2 \
            tensorflow==1.5.0 requests==2.25.0 pyface==6.1.2 traitsui==6.1.3 mayavi==4.7.1 xxhash==2.0.0 \
            autolab_core==0.0.14 visualization==0.1.4

# may need to update meshpy requirements to be scikit-learn==0.20.4 instead of sklearn
RUN git clone https://github.com/anmakon/meshpy.git && \
    cd meshpy && \
    python setup.py develop && \
    cd .. && \
    git clone https://github.com/BerkeleyAutomation/perception.git && \
    cd perception && \
    git checkout 0.0.9 && \
    pip install -e .
    #python setup.py develop

RUN git clone https://github.com/BerkeleyAutomation/gqcnn.git --branch v1.1.0 && \
    cd gqcnn/ && \
    python setup.py develop

RUN rm -rf /usr/local/lib/python2.7/dist-packages/dask* && \
    rm -rf /usr/local/lib/python2.7/dist-packages/toolz* && \
    pip install  scikit-image==0.14.2 scikit-learn==0.20.4 scikit-video==1.1.11 scipy==1.2.2 tensorflow==1.5.0 pyface==6.1.2 traitsui==6.1.3 mayavi==4.7.1

# COPY AND INSTALL DEX-NET
COPY dex-net dex-net
RUN cd dex-net && python setup.py develop

RUN pip install triangle tqdm && apt-get install -y meshlab
